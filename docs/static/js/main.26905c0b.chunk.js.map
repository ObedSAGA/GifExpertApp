{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","title","url","console","log","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifts","map","img","id","images","fixed_height","GifGrid","loading","state","setState","useEffect","then","imgs","setTimeout","useFetchGifs","GifExpertApp","categories","setcategories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,wBAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAeA,OACI,sBAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAlBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,QCPlBG,EAAc,SAAC,GAAqB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAIlC,OAFAC,QAAQC,IAAI,CAAEH,QAAOC,QAGjB,sBAAKG,UAAU,yCAAf,UACI,qBAAKC,IAAMJ,EAAMK,IAAMN,IACvB,4BAAKA,Q,uBCRJO,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbR,EAFa,iDAEoCS,UAAWF,GAF/C,+DAGAG,MAAMV,GAHN,cAGbW,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRlB,MAAOiB,EAAIjB,MACXC,IAAG,UAAEgB,EAAIE,cAAN,aAAE,EAAYC,aAAanB,QAVnB,kBAcZc,GAdY,4CAAH,sDCGPM,EAAU,SAAC,GAAgB,IAAfb,EAAc,EAAdA,SAErB,ECFwB,SAAEA,GAE1B,MAA0BtB,mBAAS,CAC/B4B,KAAM,GACNQ,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAuBA,OAlBAC,qBAAW,WAEPlB,EAASC,GACJkB,MAAM,SAAAC,GAEHC,YAAW,WAEPJ,EAAU,CACNV,KAAMa,EACNL,SAAS,MAGd,UAIZ,CAACd,IAEGe,EDvB0BM,CAAcrB,GAAlCW,EAAb,EAAQL,KAAaQ,EAArB,EAAqBA,QAErB,OACI,qCACA,oBAAIlB,UAAU,oCAAd,SAAmDI,IAEjDc,GAAW,mBAAGlB,UAAU,mCAAb,yBAEb,qBAAKA,UAAU,YAAf,SAGYe,EAAOH,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAESA,GADCA,EAAIC,aEfzBY,EAAe,WAGxB,MAAoC5C,mBAAS,CAAC,YAA9C,mBAAO6C,EAAP,KAAmBC,EAAnB,KAGA,OACI,qCACI,oBAAI5B,UAAU,yCAAd,0BACA,cAAC,EAAD,CAAanB,cAAgB+C,IAC7B,uBAEA,6BAEQD,EAAWf,KAAI,SAAAR,GAAQ,OACnB,cAAC,EAAD,CACIA,SAAUA,GACLA,Y,MCfjCyB,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.26905c0b.chunk.js","sourcesContent":["import  { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState('Busca algo divertido');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if (inputValue.trim().length > 2 ) {\r\n            setCategories( cats => [ inputValue, ...cats])\r\n            setinputValue('');\r\n            \r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url }) => {\r\n\r\n    console.log({ title, url });\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__zoomIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category )  }&limit=10&api_key=qjAQK296iGn0J7HPkfhMMv6eGvEVr1IR`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.fixed_height.url\r\n        }\r\n    })\r\n\r\n    return gifts;\r\n   \r\n}\r\n\r\n","import { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\n\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n   \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">Cargando...</p> }\r\n\r\n        <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map(img => (\r\n                        <GifGridItem \r\n                            key={ img.id }\r\n                            { ...img }                  \r\n                        />\r\n                    ))\r\n                }\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true,\r\n    })\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => { \r\n\r\n                setTimeout(() => {\r\n                    \r\n                    setState( {\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                    \r\n                }, 1000);\r\n\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n}","import { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    \r\n    \r\n    const [categories, setcategories] = useState(['Pikachu']);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"animate__animated animate__slideInDown\">GifExpertApp</h2>\r\n            <AddCategory setCategories={ setcategories } />\r\n            <hr />\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                            category={category} \r\n                            key={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GifExpertApp }  from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}